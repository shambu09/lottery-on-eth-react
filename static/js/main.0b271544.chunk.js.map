{"version":3,"sources":["web3.js","lottery.js","App.js","index.js"],"names":["connect","a","enabled","error","web3","accounts","window","ethereum","request","method","Web3","abi","constant","inputs","name","outputs","payable","stateMutability","type","getContract","eth","Contract","App","useState","isEnabled","web3Con","lottery","manager","account","balance","players","value","message","state","setState","useEffect","handleAccountsChange","console","log","location","reload","handleChainChange","chainId","_setContractDetails","methods","call","getBalance","options","address","getPlayers","prevState","then","on","setListeners","removeListener","removeListeners","e","onSubmit","event","preventDefault","Enter","send","from","utils","toWei","onPickWinner","pickWinner","className","length","fromWei","onChange","target","toLowerCase","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+sBAEMA,EAAO,uCAAG,kCAAAC,EAAA,6DACXC,GAAU,EACVC,EAAQ,KACRC,EAAO,KACPC,EAAW,KAJA,kBAOGC,OAAOC,SAASC,QAAQ,CACxCC,OAAQ,wBARK,OAOdJ,EAPc,OAUdD,EAAO,IAAIM,IAAKJ,OAAOC,UACvBL,GAAU,EAXI,kDAadC,EAAK,KAbS,iCAeR,CAAEE,WAAUD,OAAMF,UAASC,UAfnB,0DAAH,qDCFPQ,EAAM,CACX,CACCC,UAAU,EACVC,OAAQ,GACRC,KAAM,QACNC,QAAS,GACTC,SAAS,EACTC,gBAAiB,UACjBC,KAAM,YAEP,CACCN,UAAU,EACVC,OAAQ,GACRC,KAAM,UACNC,QAAS,CAAC,CAAED,KAAM,GAAII,KAAM,YAC5BF,SAAS,EACTC,gBAAiB,OACjBC,KAAM,YAEP,CACCN,UAAU,EACVC,OAAQ,GACRC,KAAM,aACNC,QAAS,GACTC,SAAS,EACTC,gBAAiB,aACjBC,KAAM,YAEP,CACCN,UAAU,EACVC,OAAQ,GACRC,KAAM,aACNC,QAAS,CAAC,CAAED,KAAM,GAAII,KAAM,cAC5BF,SAAS,EACTC,gBAAiB,OACjBC,KAAM,YAEP,CACCN,UAAU,EACVC,OAAQ,CAAC,CAAEC,KAAM,GAAII,KAAM,YAC3BJ,KAAM,UACNC,QAAS,CAAC,CAAED,KAAM,GAAII,KAAM,YAC5BF,SAAS,EACTC,gBAAiB,OACjBC,KAAM,YAEP,CACCL,OAAQ,GACRG,SAAS,EACTC,gBAAiB,aACjBC,KAAM,gBASOC,EAJK,SAACf,GACpB,OAAO,IAAIA,EAAKgB,IAAIC,SAASV,EAHd,+C,OCgKDW,MA5Mf,WACC,MAA0BC,mBAAS,CAClCC,WAAW,EACXC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,QAAS,GACTC,QAAS,GACTC,MAAO,GACPC,QAAS,KATV,mBAAOC,EAAP,KAAcC,EAAd,KAYAC,qBAAU,WACT,IAAMC,EAAuB,SAAC/B,GAC7BgC,QAAQC,IAAI,oBACZhC,OAAOiC,SAASC,UAGXC,EAAoB,SAACC,GAC1BL,QAAQC,IAAI,iBACZhC,OAAOiC,SAASC,UAGXG,EAAmB,uCAAG,WAAOjB,EAAStB,GAAhB,mBAAAH,EAAA,sEACLyB,EAAQkB,QAAQjB,UAAUkB,OADrB,cACrBlB,EADqB,gBAELvB,EAAKgB,IAAI0B,WAAWpB,EAAQqB,QAAQC,SAF/B,cAErBnB,EAFqB,gBAGLH,EAAQkB,QAAQK,aAAaJ,OAHxB,OAGrBf,EAHqB,OAK3BI,GAAS,SAACgB,GACT,OAAO,2BAAKA,GAAZ,IAAuBvB,UAASE,UAASC,eANf,4CAAH,wDAiCzB,OAvBA9B,IAAUmD,MAAK,YAAyC,IAAtC9C,EAAqC,EAArCA,SAAUD,EAA2B,EAA3BA,KAAMF,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACtCD,GACHmC,QAAQC,IAAI,yBFrBK,SAACF,EAAsBK,GAC3CnC,OAAOC,SAAS6C,GAAG,kBAAmBhB,GACtC9B,OAAOC,SAAS6C,GAAG,eAAgBX,GEoBhCY,CAAajB,EAAsBK,GAEnCP,GAAS,SAACgB,GACT,IAAMxB,EAAUP,EAAYf,GAE5B,OADAuC,EAAoBjB,EAAStB,GACtB,2BACH8C,GADJ,IAEC1B,UAAWtB,EACXuB,QAASrB,EACTsB,QAASA,EACTE,QAASvB,EAAS,UAIpBgC,QAAQC,IAAI,6CACZD,QAAQC,IAAInC,OAKP,WACN,KFtCqB,SAACiC,EAAsBK,GAC9CnC,OAAOC,SAAS+C,eAAe,kBAAmBlB,GAClD9B,OAAOC,SAAS+C,eAAe,eAAgBb,GEqC5Cc,CAAgBnB,EAAsBK,GACrC,MAAOe,GACRnB,QAAQC,IACP,iEAEDD,QAAQC,IAAIkB,OAGZ,IAEH,IAAMC,EAAQ,uCAAG,WAAOC,GAAP,mBAAAzD,EAAA,6DAChByD,EAAMC,iBAEA/B,EAAUK,EAAML,QAEtBM,GAAS,SAACgB,GACT,OAAO,2BACHA,GADJ,IAEClB,QAAS,yCARK,kBAaTC,EAAMP,QAAQkB,QAAQgB,QAAQC,KAAK,CACxCC,KAAMlC,EACNG,MAAOrB,IAAKqD,MAAMC,MAAM/B,EAAMF,MAAO,WAfvB,uBAkBOE,EAAMR,QAAQL,IAAI0B,WACvCb,EAAMP,QAAQqB,QAAQC,SAnBR,cAkBTnB,EAlBS,iBAqBOI,EAAMP,QAAQkB,QAAQK,aAAaJ,OArB1C,QAqBTf,EArBS,OAuBfI,GAAS,SAACgB,GACT,OAAO,2BACHA,GADJ,IAECpB,UACAE,QAAS,yBACTH,QAASA,OA5BI,kDAgCfQ,QAAQC,IAAI,WACZD,QAAQC,IAAR,MAjCe,0DAAH,sDAqCR2B,EAAY,uCAAG,WAAOP,GAAP,eAAAzD,EAAA,6DACpByD,EAAMC,iBAEA/B,EAAUK,EAAML,QAEtBM,GAAS,SAACgB,GACT,OAAO,2BACHA,GADJ,IAEClB,QAAS,yCARS,kBAabC,EAAMP,QAAQkB,QAAQsB,aAAaL,KAAK,CAC7CC,KAAMlC,IAdY,OAiBnBM,GAAS,SAACgB,GACT,OAAO,2BACHA,GADJ,IAEClB,QAAS,iCApBQ,gDAwBnBK,QAAQC,IAAI,WACZD,QAAQC,IAAR,MAzBmB,yDAAH,sDA6BlB,OACC,sBAAK6B,UAAU,MAAf,UACC,sBAAKA,UAAU,eAAf,UACC,4CACW,IACTlC,EAAML,QAAUK,EAAML,QAAU,qBAElC,8BACEK,EAAMT,UACJ,wBACA,iCAGL,sBAAK2C,UAAU,WAAf,UACC,kDAEA,sBAAKA,UAAU,mBAAf,UACC,4DAC6B,IAC3BlC,EAAMN,QAAUM,EAAMN,QAAU,gBAElC,qDACsBM,EAAMH,QAAQsC,OADpC,oCAE2B,IACzB1D,IAAKqD,MAAMM,QAAQpC,EAAMJ,QAAS,SAHpC,cAKA,uBACA,uBAAM4B,SAAUA,EAAhB,UACC,wDACA,sBAAKU,UAAU,QAAf,UACC,gEACA,uBACCpC,MAAOE,EAAMF,MACbuC,SAAU,SAACd,GAAD,OACTtB,GAAS,SAACgB,GACT,OAAO,2BACHA,GADJ,IAECnB,MAAOyB,EAAEe,OAAOxC,iBAMrB,wBAAQoC,UAAU,MAAlB,sBAEAlC,EAAMN,SACPM,EAAML,SACNK,EAAMN,QAAQ6C,gBACbvC,EAAML,QAAQ4C,cACd,qCACC,uBACA,gCACC,wDACA,wBAAQC,QAASR,EAAjB,4BAID,0BAGD,uBAED,6BAAKhC,EAAMD,oBCzMhB0C,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.0b271544.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst connect = async () => {\n\tlet enabled = false;\n\tlet error = null;\n\tlet web3 = null;\n\tlet accounts = null;\n\n\ttry {\n\t\taccounts = await window.ethereum.request({\n\t\t\tmethod: \"eth_requestAccounts\",\n\t\t});\n\t\tweb3 = new Web3(window.ethereum);\n\t\tenabled = true;\n\t} catch (e) {\n\t\terror = e;\n\t}\n\treturn { accounts, web3, enabled, error };\n};\n\nconst getWeb3 = () => {\n\treturn new Web3(window.ethereum);\n};\n\nconst setListeners = (handleAccountsChange, handleChainChange) => {\n\twindow.ethereum.on(\"accountsChanged\", handleAccountsChange);\n\twindow.ethereum.on(\"chainChanged\", handleChainChange);\n};\n\nconst removeListeners = (handleAccountsChange, handleChainChange) => {\n\twindow.ethereum.removeListener(\"accountsChanged\", handleAccountsChange);\n\twindow.ethereum.removeListener(\"chainChanged\", handleChainChange);\n};\n\nexport { connect, getWeb3, setListeners, removeListeners };\n","const abi = [\n\t{\n\t\tconstant: false,\n\t\tinputs: [],\n\t\tname: \"Enter\",\n\t\toutputs: [],\n\t\tpayable: true,\n\t\tstateMutability: \"payable\",\n\t\ttype: \"function\",\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [],\n\t\tname: \"manager\",\n\t\toutputs: [{ name: \"\", type: \"address\" }],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\",\n\t},\n\t{\n\t\tconstant: false,\n\t\tinputs: [],\n\t\tname: \"pickWinner\",\n\t\toutputs: [],\n\t\tpayable: false,\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"function\",\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [],\n\t\tname: \"getPlayers\",\n\t\toutputs: [{ name: \"\", type: \"address[]\" }],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\",\n\t},\n\t{\n\t\tconstant: true,\n\t\tinputs: [{ name: \"\", type: \"uint256\" }],\n\t\tname: \"players\",\n\t\toutputs: [{ name: \"\", type: \"address\" }],\n\t\tpayable: false,\n\t\tstateMutability: \"view\",\n\t\ttype: \"function\",\n\t},\n\t{\n\t\tinputs: [],\n\t\tpayable: false,\n\t\tstateMutability: \"nonpayable\",\n\t\ttype: \"constructor\",\n\t},\n];\nconst address = \"0xc1fe31c3c9772cf7f1cc7e24e280d1b9e27f1950\";\n\nconst getContract = (web3) => {\n\treturn new web3.eth.Contract(abi, address);\n};\n\nexport default getContract;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport { connect, setListeners, removeListeners } from \"./web3\";\nimport Web3 from \"web3\";\nimport getContract from \"./lottery\";\n\nfunction App() {\n\tconst [state, setState] = useState({\n\t\tisEnabled: false,\n\t\tweb3Con: null,\n\t\tlottery: null,\n\t\tmanager: null,\n\t\taccount: null,\n\t\tbalance: \"\",\n\t\tplayers: [],\n\t\tvalue: \"\",\n\t\tmessage: \"\",\n\t});\n\n\tuseEffect(() => {\n\t\tconst handleAccountsChange = (accounts) => {\n\t\t\tconsole.log(\"Accounts Changed\");\n\t\t\twindow.location.reload();\n\t\t};\n\n\t\tconst handleChainChange = (chainId) => {\n\t\t\tconsole.log(\"Chain Changed\");\n\t\t\twindow.location.reload();\n\t\t};\n\n\t\tconst _setContractDetails = async (lottery, web3) => {\n\t\t\tconst manager = await lottery.methods.manager().call();\n\t\t\tconst balance = await web3.eth.getBalance(lottery.options.address);\n\t\t\tconst players = await lottery.methods.getPlayers().call();\n\n\t\t\tsetState((prevState) => {\n\t\t\t\treturn { ...prevState, manager, balance, players };\n\t\t\t});\n\t\t};\n\n\t\tconnect().then(({ accounts, web3, enabled, error }) => {\n\t\t\tif (enabled) {\n\t\t\t\tconsole.log(\"Connected to Metamask\");\n\t\t\t\tsetListeners(handleAccountsChange, handleChainChange);\n\n\t\t\t\tsetState((prevState) => {\n\t\t\t\t\tconst lottery = getContract(web3);\n\t\t\t\t\t_setContractDetails(lottery, web3);\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\tisEnabled: enabled,\n\t\t\t\t\t\tweb3Con: web3,\n\t\t\t\t\t\tlottery: lottery,\n\t\t\t\t\t\taccount: accounts[0],\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Error connecting to Metamask, Traceback: \");\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t});\n\n\t\t// Component Cleanup function -> Removes listeners from the metamask provider instance.\n\t\treturn () => {\n\t\t\ttry {\n\t\t\t\tremoveListeners(handleAccountsChange, handleChainChange);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"Unable To Remove Listeners or No Listners at all, TraceBack: \"\n\t\t\t\t);\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t};\n\t}, []);\n\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst account = state.account;\n\n\t\tsetState((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\tmessage: \"Waiting on transaction success...\",\n\t\t\t};\n\t\t});\n\n\t\ttry {\n\t\t\tawait state.lottery.methods.Enter().send({\n\t\t\t\tfrom: account,\n\t\t\t\tvalue: Web3.utils.toWei(state.value, \"ether\"),\n\t\t\t});\n\n\t\t\tconst balance = await state.web3Con.eth.getBalance(\n\t\t\t\tstate.lottery.options.address\n\t\t\t);\n\t\t\tconst players = await state.lottery.methods.getPlayers().call();\n\n\t\t\tsetState((prevState) => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tplayers,\n\t\t\t\t\tmessage: \"You have been entered!\",\n\t\t\t\t\tbalance: balance,\n\t\t\t\t};\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error: \");\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\n\tconst onPickWinner = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst account = state.account;\n\n\t\tsetState((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\tmessage: \"Waiting on transaction success...\",\n\t\t\t};\n\t\t});\n\n\t\ttry {\n\t\t\tawait state.lottery.methods.pickWinner().send({\n\t\t\t\tfrom: account,\n\t\t\t});\n\n\t\t\tsetState((prevState) => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tmessage: \"A winner has been picked!\",\n\t\t\t\t};\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.log(\"Error: \");\n\t\t\tconsole.log(e);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"Account-info\">\n\t\t\t\t<div>\n\t\t\t\t\tAccount :{\" \"}\n\t\t\t\t\t{state.account ? state.account : \"Not Initialized\"}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{state.isEnabled\n\t\t\t\t\t\t? \"Connected to Metamask\"\n\t\t\t\t\t\t: \"Not Connected to Metamask\"}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"Contract\">\n\t\t\t\t<h2>Lottery Contract</h2>\n\n\t\t\t\t<div className=\"Contract-details\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis contract is managed by{\" \"}\n\t\t\t\t\t\t{state.manager ? state.manager : \"No Manager\"}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThere are currently {state.players.length} people\n\t\t\t\t\t\tentered, competing to win{\" \"}\n\t\t\t\t\t\t{Web3.utils.fromWei(state.balance, \"ether\")} ether !\n\t\t\t\t\t</p>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t\t<h3>Want to try your luck?</h3>\n\t\t\t\t\t\t<div className=\"input\">\n\t\t\t\t\t\t\t<label>Amount of ether to enter : </label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tvalue={state.value}\n\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\tsetState((prevState) => {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\t\t\t\t\t\tvalue: e.target.value,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button className=\"btn\">Enter</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t{state.manager &&\n\t\t\t\t\tstate.account &&\n\t\t\t\t\tstate.manager.toLowerCase() ===\n\t\t\t\t\t\tstate.account.toLowerCase() ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h4>Time to pick a winner?</h4>\n\t\t\t\t\t\t\t\t<button onClick={onPickWinner}>\n\t\t\t\t\t\t\t\t\tPick Winner\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t)}\n\t\t\t\t\t<h1>{state.message}</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}